// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// FindShift_cpp
arma::field<arma::vec> FindShift_cpp(double rho, arma::mat X, arma::mat A, arma::vec b);
RcppExport SEXP _LinConGauss_FindShift_cpp(SEXP rhoSEXP, SEXP XSEXP, SEXP ASEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(FindShift_cpp(rho, X, A, b));
    return rcpp_result_gen;
END_RCPP
}
// xtheta_cpp
arma::vec xtheta_cpp(double theta, arma::vec x0, arma::vec nu);
RcppExport SEXP _LinConGauss_xtheta_cpp(SEXP thetaSEXP, SEXP x0SEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(xtheta_cpp(theta, x0, nu));
    return rcpp_result_gen;
END_RCPP
}
// LinESS_cpp
arma::mat LinESS_cpp(arma::mat A, arma::vec b, int N, arma::vec x0, int nskip);
RcppExport SEXP _LinConGauss_LinESS_cpp(SEXP ASEXP, SEXP bSEXP, SEXP NSEXP, SEXP x0SEXP, SEXP nskipSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< int >::type nskip(nskipSEXP);
    rcpp_result_gen = Rcpp::wrap(LinESS_cpp(A, b, N, x0, nskip));
    return rcpp_result_gen;
END_RCPP
}
// SubsetSim_cpp
arma::field<arma::vec> SubsetSim_cpp(arma::mat A, arma::vec b, int N, double rho, int nskip);
RcppExport SEXP _LinConGauss_SubsetSim_cpp(SEXP ASEXP, SEXP bSEXP, SEXP NSEXP, SEXP rhoSEXP, SEXP nskipSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type nskip(nskipSEXP);
    rcpp_result_gen = Rcpp::wrap(SubsetSim_cpp(A, b, N, rho, nskip));
    return rcpp_result_gen;
END_RCPP
}
// HDR_algo_cpp
double HDR_algo_cpp(arma::mat A, arma::vec b, arma::vec gamma_vec, int N, int nskip);
RcppExport SEXP _LinConGauss_HDR_algo_cpp(SEXP ASEXP, SEXP bSEXP, SEXP gamma_vecSEXP, SEXP NSEXP, SEXP nskipSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gamma_vec(gamma_vecSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type nskip(nskipSEXP);
    rcpp_result_gen = Rcpp::wrap(HDR_algo_cpp(A, b, gamma_vec, N, nskip));
    return rcpp_result_gen;
END_RCPP
}
// mcint_lincon
double mcint_lincon(int N, arma::mat A, arma::vec b);
RcppExport SEXP _LinConGauss_mcint_lincon(SEXP NSEXP, SEXP ASEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(mcint_lincon(N, A, b));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_LinConGauss_FindShift_cpp", (DL_FUNC) &_LinConGauss_FindShift_cpp, 4},
    {"_LinConGauss_xtheta_cpp", (DL_FUNC) &_LinConGauss_xtheta_cpp, 3},
    {"_LinConGauss_LinESS_cpp", (DL_FUNC) &_LinConGauss_LinESS_cpp, 5},
    {"_LinConGauss_SubsetSim_cpp", (DL_FUNC) &_LinConGauss_SubsetSim_cpp, 5},
    {"_LinConGauss_HDR_algo_cpp", (DL_FUNC) &_LinConGauss_HDR_algo_cpp, 5},
    {"_LinConGauss_mcint_lincon", (DL_FUNC) &_LinConGauss_mcint_lincon, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_LinConGauss(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
